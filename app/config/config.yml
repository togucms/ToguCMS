imports:
    - { resource: parameters.yml }
    - { resource: security.yml }

framework:
    #esi:             ~
    translator:      { fallback: "%locale%" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: false # write a custom provider that detects ajax requests
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig', 'php']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: 
        enabled: "%kernel.debug%"
        profiler: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        types:
            json: Sonata\Doctrine\Types\JsonType
        # if using pdo_sqlite as your database driver, add the path in parameters.yml
        # e.g. database_path: "%kernel.root_dir%/data/data.db3"
        # path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        entity_managers:
            default:
                auto_mapping: true
                mappings:
                    SonataMediaBundle: ~                    
                    ApplicationSonataMediaBundle: ~                    

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }
    
fos_rest:
    service:
        serializer: tpg_extjs.serializer
    routing_loader:
        default_format: json
    param_fetcher_listener: true
    
tpg_extjs:
    entities:
        - @ApplicationToguApplicationModelsBundle/Document/
        - @ApplicationToguApplicationModelsBundle/Document/App/
        - @ToguUserBundle/Entity/
    remoting:
        bundles:
            - ToguUserBundle
            
fos_user:
    db_driver: orm
    firewall_name: backoffice
    user_class: Togu\UserBundle\Entity\User
#    registration:
#        confirmation:
#            enabled:    false
#            from_email:
#                address:        email@address.com
#                sender_name:    Name
#    service:
#            mailer: fos_user.mailer.twig_swift
            
sonata_media:
    # if you don't use default namespace configuration
    #class:
    #    media: MyVendor\MediaBundle\Entity\Media
    #    gallery: MyVendor\MediaBundle\Entity\Gallery
    #    gallery_has_media: MyVendor\MediaBundle\Entity\GalleryHasMedia
    default_context: default
    db_driver: doctrine_orm
#    db_driver: doctrine_phpcr
    contexts:
        default:  # the default context is mandatory
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file

            formats:
                small: { width: 100 , quality: 70}
                big:   { width: 500 , quality: 70}

    cdn:
        server:
            path: /uploads/media # http://media.sonata-project.org/

    filesystem:
        local:
            directory:  %kernel.root_dir%/../web/uploads/media
            create:     false

#    providers:
#        image:
#            thumbnail:  sonata.media.thumbnail.liip_imagine
#        vimeo:
#            thumbnail:  sonata.media.thumbnail.liip_imagine
#        youtube:
#            thumbnail:  sonata.media.thumbnail.liip_imagine
#        dailymotion:
#            thumbnail:  sonata.media.thumbnail.liip_imagine
#    class:
#        media: Application\Sonata\MediaBundle\PHPCR\Media
#        gallery: Application\Sonata\MediaBundle\PHPCR\Gallery
#        gallery_has_media: Application\Sonata\MediaBundle\PHPCR\GalleryHasMedia
            

doctrine_cache:
    providers:
        phpcr_meta:
            type: file_system
        phpcr_nodes:
            type: file_system            

doctrine_phpcr:
    session:
        backend:
            type: doctrinedbal
            # requires DoctrineCacheBundle
            caches:
                meta: doctrine_cache.providers.phpcr_meta
                nodes: doctrine_cache.providers.phpcr_nodes
            # enable logging
            logging: true
            # enable profiling in the debug toolbar.
            profiling: false
        workspace: default
#        username: admin
#        password: admin
    
    odm:
        auto_generate_proxy_classes: "%kernel.debug%"
        default_document_manager: default
        document_managers:
            default:
                session: default
                default_repository_class: Togu\ApplicationModelsBundle\Phpcr\DocumentRepository
                mappings:
                    ApplicationToguApplicationModelsBundle: ~
                    ToguApplicationModelsBundle: ~
                    ToguMediaBundle: ~
#                    ApplicationSonataMediaBundle:
#                        prefix: Application\Sonata\MediaBundle\PHPCR
                
#                    SonataMediaBundle:
#                        prefix: Sonata\MediaBundle\PHPCR
    
#        document_managers:
#            default:
#                session: default
#                auto_mapping: true
        
fos_rest:
    param_fetcher_listener: true
    body_listener:          true
    format_listener:        true
    view:
        view_response_listener: force
    body_converter:
        enabled: true
        validate: true

sensio_framework_extra:
    view:    { annotations: false }
    router:  { annotations: true }
    request: { converters: true }

twig:
    exception_controller: 'FOS\RestBundle\Controller\ExceptionController::showAction'

# Cmf Configuration
cmf_core:
    persistence:
        phpcr: true
        # if you want another basepath
        # basepath: /custom/basepath
    publish_workflow: false

cmf_content:
    persistence:
        phpcr:
            document_class: Application\Togu\ApplicationModelsBundle\Document\Page


# Cmf Routing Configuration
cmf_routing:
    chain:
        routers_by_id:
            cmf_routing.dynamic_router: 20
            router.default: 100
    dynamic:
        persistence:
            phpcr:
                route_basepath: /cms/routes
        controllers_by_type:
            default_type: togu.frontend.controller:typeAction

cmf_seo:
    title: %%content_title%%
    description: %%content_description%%
    persistence:
        phpcr: true
            
sonata_seo:
    page:
        title: Togu
        metas:
            name:
                keywords: "Togu, CMS"
            
jms_serializer:
    metadata:
        directories:
            togu-models:
                namespace_prefix: "Togu\\ApplicationModelsBundle"
                path: "@ToguApplicationModelsBundle/Resources/config/serializer"
            cmf:
                namespace_prefix: "Symfony\\Cmf\\Bundle\\ContentBundle"
                path: "@ToguApplicationModelsBundle/Resources/config/serializer"
